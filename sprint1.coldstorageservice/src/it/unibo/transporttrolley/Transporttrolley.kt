/* Generated by AN DISI Unibo */ 
package it.unibo.transporttrolley

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Transporttrolley ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		val interruptedStateTransitions = mutableListOf<Transition>()
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						CommUtils.outmagenta("$name | init e engage basicrobot")
						request("engage", "engage(transporttrolley,330)" ,"basicrobot" )  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t010",targetState="idle",cond=whenReply("engagedone"))
				}	 
				state("idle") { //this:State
					action { //it:State
						CommUtils.outmagenta("$name | attende comandi...")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t011",targetState="moveToIndoor",cond=whenDispatch("gotoindoor"))
				}	 
				state("moveToIndoor") { //this:State
					action { //it:State
						CommUtils.outmagenta("$name | vado all'INDOOR")
						request("moverobot", "moverobot(0,4)" ,"basicrobot" )  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t012",targetState="loadTheCharge",cond=whenReply("moverobotdone"))
				}	 
				state("loadTheCharge") { //this:State
					action { //it:State
						CommUtils.outmagenta("$name | sto caricando il carico presso l'INDOOR")
						delay(2000) 
						forward("chargetaken", "chargetaken(_)" ,"coldstorageservice" ) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="movetocoldroom", cond=doswitch() )
				}	 
				state("movetocoldroom") { //this:State
					action { //it:State
						request("moverobot", "moverobot(4,3)" ,"basicrobot" )  
						CommUtils.outblack("$name | vado a verso la cold room")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t013",targetState="storethecharge",cond=whenReply("moverobotdone"))
				}	 
				state("storethecharge") { //this:State
					action { //it:State
						CommUtils.outblack("$name | scarico il carico presso la Cold Room")
						delay(2000) 
						request("chargedeposited", "chargedeposited(_)" ,"coldstorageservice" )  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t014",targetState="moveToIndoor",cond=whenReply("more"))
					transition(edgeName="t015",targetState="movetohome",cond=whenReply("gohome"))
				}	 
				state("movetohome") { //this:State
					action { //it:State
						CommUtils.outblack("$name | vado alla posizione HOME")
						request("moverobot", "moverobot(0,0)" ,"basicrobot" )  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t016",targetState="trolleyathome",cond=whenReply("moverobotdone"))
				}	 
				state("trolleyathome") { //this:State
					action { //it:State
						CommUtils.outblack("$name | trolley at HOME")
						forward("setdirection", "dir(down)" ,"basicrobot" ) 
						delay(1000) 
						forward("disengage", "disengage(transporttrolley)" ,"basicrobot" ) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
				}	 
			}
		}
}
