/* Generated by AN DISI Unibo */ 
package it.unibo.coldstorageservice

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Coldstorageservice ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "init"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		val interruptedStateTransitions = mutableListOf<Transition>()
		
				var CurrentWeight: Float
				var RejectedRequest: Int
				var CurrentTicket: String
				val Tickets: MutableSet<Ticket>
		return { //this:ActionBasciFsm
				state("init") { //this:State
					action { //it:State
						 
									CurrentWeight = 0.0f 
									RejectedRequests = 0
									Tickets = new MutableSet()
						CommUtils.outblack("[ColdStorageService] Initialized")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="idle", cond=doswitch() )
				}	 
				state("idle") { //this:State
					action { //it:State
						CommUtils.outblack("[ColdStorageService] Idle...")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t00",targetState="handle_data",cond=whenRequest("coldroomdatarequest"))
					transition(edgeName="t01",targetState="handle_store",cond=whenRequest("storerequest"))
					transition(edgeName="t02",targetState="handle_ticket",cond=whenRequest("insertticket"))
				}	 
				state("handle_data") { //this:State
					action { //it:State
						CommUtils.outcyan("$name in ${currentState.stateName} | $currentMsg | ${Thread.currentThread().getName()} n=${Thread.activeCount()}")
						 	   
						if( checkMsgContent( Term.createTerm("coldroomdatarequest(_)"), Term.createTerm("coldroomdatarequest(_)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								answer("coldroomdatarequest", "coldroomdata", "coldroomdata($CurrentWeight)"   )  
						}
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
				}	 
				state("handle_store") { //this:State
					action { //it:State
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
				}	 
				state("handle_ticket") { //this:State
					action { //it:State
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
				}	 
			}
		}
}
